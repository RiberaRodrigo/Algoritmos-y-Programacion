# Algoritmos_y_Programacion
#include "stdafx.h"
#include <iostream>
#include "conio.h"
#include <string>
#include "stdlib.h"

using namespace std;

#define FIL 10
#define COL 10
#define MAX 30

struct t_Vector{
	int Vector[MAX];
};


void Cargar(t_Vector Mat[FIL][COL], int n);
void Mostrar(t_Vector Mat[FIL][COL], int n);
void Ordenar(int Vect[], int n);
void Ajustar_al_Patron(t_Vector Mat[FIL][COL], int n);

void main()
{
	int n;
	t_Vector Mat[FIL][COL];
	do{
		cout << "\n\n\n Ingrese el numero de elementos: ";
		cin >> n;
		cout << endl;
	}while(n<=0 || n>10);

	Cargar(Mat,n);
	Mostrar(Mat,n);
	cout << endl;
	Ajustar_al_Patron(Mat,n);
	cout << "\n\n";
	Mostrar(Mat,n);
	
	getch();
}

void Cargar(t_Vector Mat[FIL][COL], int n)
{
	int i, j, k;
	for(i=0; i < n; i++)
		for(j=0; j < n; j++)
			for(k=0; k < n; k++)
				{	
					/*cin >>*/ //Vec[k].Matriz[j][i] = rand() %10;//CARGADO AUTOMATICO
					Mat[i][j].Vector[k] = rand() %10;
				}
}


void Mostrar(t_Vector Mat[FIL][COL], int n)
{
	int i, j, k;
	for(i=0; i < n; i++)
	{
		for(j=0; j < n; j++)
		{
			for(k=0; k < n; k++)
			{
				cout << "["<<i<<"]["<<j<<"].["<<k<<"]= " << Mat[i][j].Vector[k] <<"\t";
			}
			cout << endl;
		}
		cout << endl;
	}
}

void Ordenar(int Vect[], int n)
{
	int i, j, aux;
	for(i=0; i < n-1; i++)
		for(j=i+1; j < n; j++)
		{
			if(Vect[i] > Vect[j])
			{
				aux = Vect[i];
				Vect[i] = Vect[j];
				Vect[j] = aux;
			}
		}
}

void Ajustar_al_Patron(t_Vector Mat[FIL][COL], int n)
{
	int i, j, k, Vaux[MAX];	
	int b=1, c=0, N;
	//Cargando Vector auxiliar con los elementos del patron
		for(j=0; j < n; j++)
			{
				if(b==1)
				{
					for(k=0; k < n; k++)
					{
						Vaux[c] = Mat[n-1][j].Vector[k];
						c++;
					}
					b=0;
				}
				else
				{
					for(k=0; k < n; k++)
					{
						Vaux[c] = Mat[0][j].Vector[k];
						c++;
					}
					b=1;
				}
			}

	//Mostrando el vector auxiliar y luego ordenarlo
		N = n*n;	
		cout << "Vector Auxiliar: ";
		for(i=0; i < N; i++)
			cout << Vaux[i] << "  ";
	
		Ordenar(Vaux,N);

		cout << endl;
		cout << "Ordenado: ";
		for(i=0; i < N; i++)
			cout << Vaux[i] << "  ";
	
	//Cargando la matriz de vectores de acuerdo al patron
		c=0;
		b=1;
		for(j=0; j < n; j++)
			{
				if(b==1)
				{
					for(k=0; k < n; k++)
					{
						Mat[n-1][j].Vector[k] = Vaux[c];
						c++;
					}
					b=0;
				}
				else
				{
					for(k=0; k < n; k++)
					{
						Mat[0][j].Vector[k] = Vaux[c];
						c++;
					}
					b=1;
				}
			}
}

